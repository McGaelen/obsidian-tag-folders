import 'dotenv/config'
import esbuild from 'esbuild'
import process from 'node:process'
import builtins from 'builtin-modules'
import esbuildSvelte from 'esbuild-svelte'
import { sveltePreprocess } from 'svelte-preprocess'
import copy from 'esbuild-plugin-copy'
import tailwindPlugin from 'esbuild-plugin-tailwindcss'

/**
 * NOTE: add these to devDeps to use this esbuild again:
 *
 * "esbuild": "0.17.3",
 * "esbuild-plugin-copy": "^2.1.1",
 * "esbuild-plugin-tailwindcss": "^2.0.1",
 * "esbuild-svelte": "^0.9.2",
 * "svelte-preprocess": "^6.0.3",
 * */

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`

const prod = process.argv[2] === 'production'

const context = await esbuild.context({
  plugins: [
    tailwindPlugin(),
    esbuildSvelte({
      compilerOptions: { css: 'injected' },
      preprocess: sveltePreprocess({ typescript: true, postcss: true }),
    }),
    copy({
      resolveFrom: 'cwd',
      assets: [
        {
          from: 'manifest.json',
          to: `${process.env.DEV_VAULT_DIRECTORY}/.obsidian/plugins/tag-folders/manifest.json`,
        },
        {
          from: 'dist/main.js',
          to: `${process.env.DEV_VAULT_DIRECTORY}/.obsidian/plugins/tag-folders/main.js`,
        },
        {
          from: 'dist/styles.css',
          to: `${process.env.DEV_VAULT_DIRECTORY}/.obsidian/plugins/tag-folders/styles.css`,
        },
      ],
    }),
  ],
  banner: {
    js: banner,
  },
  entryPoints: ['./src/main.ts', './src/styles.css'],
  bundle: true,
  external: [
    'obsidian',
    'electron',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr',
    ...builtins,
  ],
  format: 'cjs',
  target: 'es2018',
  logLevel: 'info',
  sourcemap: prod ? false : 'inline',
  treeShaking: true,
  outdir: 'dist',
  minify: prod,
  conditions: ['browser', 'default', 'import', 'module', 'svelte'],
})

if (prod) {
  await context.rebuild()
  process.exit(0)
} else {
  await context.watch()
}
